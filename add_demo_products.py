#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ MongoDB (–ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
"""
import asyncio
from motor.motor_asyncio import AsyncIOMotorClient
from datetime import datetime
import uuid

async def add_demo_products():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    
    # –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    mongo_url = "mongodb://localhost:27017"
    db_name = "ecommerce_local"
    
    print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB: {mongo_url}")
    print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_name}")
    
    try:
        client = AsyncIOMotorClient(mongo_url)
        db = client[db_name]
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await client.admin.command('ping')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ!")
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        demo_products = [
            {
                "id": str(uuid.uuid4()),
                "name": "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ Pro",
                "description": "–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ —Å –∞–∫—Ç–∏–≤–Ω—ã–º —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º",
                "price": 15999.99,
                "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
                "stock": 10,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "–°–º–∞—Ä—Ç—Ñ–æ–Ω Galaxy Max",
                "description": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω —Å –æ—Ç–ª–∏—á–Ω–æ–π –∫–∞–º–µ—Ä–æ–π –∏ –±—ã—Å—Ç—Ä—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º",
                "price": 89999.99,
                "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
                "stock": 5,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "–ö—Ä–æ—Å—Å–æ–≤–∫–∏ –¥–ª—è –±–µ–≥–∞",
                "description": "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ –¥–ª—è –±–µ–≥–∞ –∏ —Å–ø–æ—Ä—Ç–∞",
                "price": 8999.99,
                "category": "–°–ø–æ—Ä—Ç –∏ —Ñ–∏—Ç–Ω–µ—Å",
                "stock": 15,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "–£–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º",
                "description": "–ü–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä–µ–º –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∫–æ–∂–∏",
                "price": 2799.99,
                "category": "–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ",
                "stock": 20,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ —ç—Å–ø—Ä–µ—Å—Å–æ",
                "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ—Ñ–µ–≤–∞—Ä–∫–∞ –¥–ª—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è —ç—Å–ø—Ä–µ—Å—Å–æ",
                "price": 45999.99,
                "category": "–î–æ–º –∏ –±—ã—Ç",
                "stock": 3,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            }
        ]
        
        # –û—á–∏—Å—Ç–∏–º –∫–æ–ª–ª–µ–∫—Ü–∏—é —Ç–æ–≤–∞—Ä–æ–≤
        await db.products.delete_many({})
        print("üóëÔ∏è –°—Ç–∞—Ä—ã–µ —Ç–æ–≤–∞—Ä—ã —É–¥–∞–ª–µ–Ω—ã")
        
        # –î–æ–±–∞–≤–∏–º –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
        result = await db.products.insert_many(demo_products)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(result.inserted_ids)} —Ç–æ–≤–∞—Ä–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        count = await db.products.count_documents({})
        print(f"üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: {count}")
        
        # –ü–æ–∫–∞–∂–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = await db.products.distinct("category")
        print(f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        client.close()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∑–∞–∫—Ä—ã—Ç–æ")
    
    return True

if __name__ == "__main__":
    print("üõí –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤")
    print("=" * 50)
    
    success = asyncio.run(add_demo_products())
    
    if success:
        print("\nüéØ –¢–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã")