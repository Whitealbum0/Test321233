#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ MongoDB –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
"""
import os
import asyncio
from motor.motor_asyncio import AsyncIOMotorClient

async def create_indexes():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤"""
    
    # –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    mongo_url = "mongodb://localhost:27017"
    db_name = "ecommerce_local"
    
    print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB: {mongo_url}")
    print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_name}")
    
    try:
        client = AsyncIOMotorClient(mongo_url)
        db = client[db_name]
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await client.admin.command('ping')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ!")
        
        print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...")
        
        # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ products
        await db.products.create_index([("status", 1)])
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ status —Å–æ–∑–¥–∞–Ω")
        
        await db.products.create_index([("category", 1)])
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ category —Å–æ–∑–¥–∞–Ω")
        
        await db.products.create_index([("price", 1)])
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ price —Å–æ–∑–¥–∞–Ω")
        
        await db.products.create_index([("created_at", -1)])
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ created_at —Å–æ–∑–¥–∞–Ω")
        
        # –°–æ—Å—Ç–∞–≤–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        await db.products.create_index([("status", 1), ("category", 1)])
        print("‚úÖ –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –ø–æ status –∏ category —Å–æ–∑–¥–∞–Ω")
        
        await db.products.create_index([("status", 1), ("price", 1)])
        print("‚úÖ –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –ø–æ status –∏ price —Å–æ–∑–¥–∞–Ω")
        
        await db.products.create_index([("category", 1), ("price", 1)])
        print("‚úÖ –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –ø–æ category –∏ price —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
        try:
            await db.products.create_index([
                ("name", "text"),
                ("description", "text"),
                ("category", "text")
            ])
            print("‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
        
        # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users
        try:
            await db.users.create_index([("email", 1)], unique=True)
            print("‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –ø–æ email —Å–æ–∑–¥–∞–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è –ò–Ω–¥–µ–∫—Å –ø–æ email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
        
        await db.users.create_index([("role", 1)])
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ role —Å–æ–∑–¥–∞–Ω")
        
        # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ visitor_logs
        await db.visitor_logs.create_index([("timestamp", -1)])
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ timestamp —Å–æ–∑–¥–∞–Ω")
        
        await db.visitor_logs.create_index([("user_id", 1)])
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ user_id —Å–æ–∑–¥–∞–Ω")
        
        await db.visitor_logs.create_index([("page", 1)])
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ page —Å–æ–∑–¥–∞–Ω")
        
        await db.visitor_logs.create_index([("ip_address", 1)])
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ ip_address —Å–æ–∑–¥–∞–Ω")
        
        print("\nüéâ –í—Å–µ –∏–Ω–¥–µ–∫—Å—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print("üìä –¢–µ–ø–µ—Ä—å –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –±—ã—Å—Ç—Ä–µ–µ")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
        print("\nüìã –°–ø–∏—Å–æ–∫ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ products:")
        indexes = await db.products.list_indexes().to_list(length=None)
        for idx in indexes:
            print(f"  - {idx['name']}")
            
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        products_count = await db.products.count_documents({})
        print(f"\nüì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: {products_count}")
        
        if products_count == 0:
            print("‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:")
            print("   python add_demo_products.py")
            print("   python add_more_products.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MongoDB –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:27017")
        return False
    finally:
        client.close()
        print("\n‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∑–∞–∫—Ä—ã—Ç–æ")
    
    return True

if __name__ == "__main__":
    print("üöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MongoDB")
    print("=" * 50)
    
    success = asyncio.run(create_indexes())
    
    if success:
        print("\nüéØ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")