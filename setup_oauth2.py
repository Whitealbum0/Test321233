#!/usr/bin/env python3
"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è e-commerce –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
import pymongo
from pymongo import MongoClient
from datetime import datetime
import uuid
import os

def setup_oauth2_database():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    mongo_url = "mongodb://localhost:27017"
    db_name = "ecommerce_local"
    
    print("üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("=" * 50)
    print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: {mongo_url}")
    print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_name}")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
        client = MongoClient(mongo_url, serverSelectionTimeoutMS=5000)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        client.admin.command('ping')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ!")
        
        db = client[db_name]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è OAuth2
        print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è OAuth2...")
        
        # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è users
        db.users.create_index([("email", 1)], unique=True)
        db.users.create_index([("google_id", 1)], unique=True, sparse=True)
        db.users.create_index([("provider", 1)])
        db.users.create_index([("role", 1)])
        db.users.create_index([("created_at", -1)])
        
        # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è products
        db.products.create_index([("status", 1)])
        db.products.create_index([("category", 1)])
        db.products.create_index([("price", 1)])
        db.products.create_index([("created_at", -1)])
        db.products.create_index([("status", 1), ("category", 1)])
        
        # –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
        try:
            db.products.create_index([
                ("name", "text"),
                ("description", "text"),
                ("category", "text")
            ])
        except Exception as e:
            print(f"‚ö†Ô∏è –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
        
        # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è visitor_logs
        db.visitor_logs.create_index([("timestamp", -1)])
        db.visitor_logs.create_index([("user_id", 1)])
        db.visitor_logs.create_index([("page", 1)])
        
        print("‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ —Ç–æ–≤–∞—Ä–æ–≤
        print("\nüì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ —Ç–æ–≤–∞—Ä–æ–≤...")
        
        # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        db.products.delete_many({})
        
        # –î–µ–º–æ —Ç–æ–≤–∞—Ä—ã
        demo_products = [
            {
                "id": str(uuid.uuid4()),
                "name": "iPhone 15 Pro",
                "description": "–ù–æ–≤–µ–π—à–∏–π iPhone —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –∫–∞–º–µ—Ä—ã",
                "price": 129999.99,
                "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
                "stock": 15,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "MacBook Pro 16",
                "description": "–ú–æ—â–Ω—ã–π –Ω–æ—É—Ç–±—É–∫ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã",
                "price": 299999.99,
                "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
                "stock": 8,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Nike Air Max 270",
                "description": "–°—Ç–∏–ª—å–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ –¥–ª—è —Å–ø–æ—Ä—Ç–∞ –∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Å–∫–∏",
                "price": 12999.99,
                "category": "–°–ø–æ—Ä—Ç –∏ —Ñ–∏—Ç–Ω–µ—Å",
                "stock": 25,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Dior Sauvage",
                "description": "–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –º—É–∂—Å–∫–æ–π –ø–∞—Ä—Ñ—é–º",
                "price": 8999.99,
                "category": "–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ",
                "stock": 30,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Dyson V15 Detect",
                "description": "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π –ø—ã–ª–µ—Å–æ—Å —Å –ª–∞–∑–µ—Ä–Ω–æ–π –¥–µ—Ç–µ–∫—Ü–∏–µ–π –ø—ã–ª–∏",
                "price": 59999.99,
                "category": "–î–æ–º –∏ –±—ã—Ç",
                "stock": 12,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Gucci Dionysus",
                "description": "–î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∞—è —Å—É–º–∫–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –∫–æ–∂–∏",
                "price": 189999.99,
                "category": "–ú–æ–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã",
                "stock": 5,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Samsung Galaxy S24 Ultra",
                "description": "–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω —Å S Pen",
                "price": 119999.99,
                "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
                "stock": 20,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Adidas Ultraboost 22",
                "description": "–ë–µ–≥–æ–≤—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π Boost",
                "price": 16999.99,
                "category": "–°–ø–æ—Ä—Ç –∏ —Ñ–∏—Ç–Ω–µ—Å",
                "stock": 18,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Chanel No.5",
                "description": "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –∞—Ä–æ–º–∞—Ç",
                "price": 12999.99,
                "category": "–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ",
                "stock": 22,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Nespresso Vertuo",
                "description": "–ö–æ—Ñ–µ–º–∞—à–∏–Ω–∞ —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π Centrifusion",
                "price": 24999.99,
                "category": "–î–æ–º –∏ –±—ã—Ç",
                "stock": 10,
                "images": [],
                "status": "active",
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            }
        ]
        
        # –í—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
        result = db.products.insert_many(demo_products)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(result.inserted_ids)} —Ç–æ–≤–∞—Ä–æ–≤")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
        print("\nüë®‚Äçüíª –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        db.users.delete_many({})
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
        admin_user = {
            "email": "admin@example.com",
            "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            "role": "admin",
            "provider": "manual",
            "created_at": datetime.utcnow(),
            "is_active": True
        }
        
        db.users.insert_one(admin_user)
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@example.com")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        count = db.products.count_documents({})
        categories = db.products.distinct("category")
        users_count = db.users.count_documents({})
        
        print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   üì¶ –¢–æ–≤–∞—Ä–æ–≤: {count}")
        print(f"   üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
        print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        print(f"   üè∑Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {', '.join(categories)}")
        
        client.close()
        
        # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
        print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–æ–≤...")
        
        # Backend .env
        backend_env = """# OAuth2 Configuration
# OAuth2 Configuration
GOOGLE_CLIENT_ID=181676409373-7kanshq1h4i0h990vvsprvmehalbp91h.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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
GOOGLE_REDIRECT_URI=http://localhost:8001/api/auth/google/callback

# JWT Configuration
JWT_SECRET_KEY=D66vZY6)53+s2#dn4edHG~Ev~J((2b

# Database Configuration
MONGO_URL=mongodb://localhost:27017
DB_NAME=test

# Frontend URL
FRONTEND_URL=http://localhost:3000

# Frontend URL
FRONTEND_URL=http://localhost:3000
"""
        
        with open("backend/.env", "w", encoding="utf-8") as f:
            f.write(backend_env)
        
        # Frontend .env
        frontend_env = """# Backend API URL
REACT_APP_BACKEND_URL=http://localhost:8001
"""
        
        with open("frontend/.env", "w", encoding="utf-8") as f:
            f.write(frontend_env)
        
        print("‚úÖ .env —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        print("\nüéâ OAuth2 –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Google OAuth2 –≤ Google Cloud Console")
        print("2. –ü–æ–ª—É—á–∏—Ç–µ GOOGLE_CLIENT_ID –∏ GOOGLE_CLIENT_SECRET")
        print("3. –î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ backend/.env")
        print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python server_oauth.py")
        
        return True
        
    except pymongo.errors.ServerSelectionTimeoutError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MongoDB")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MongoDB –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:27017")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = setup_oauth2_database()
    
    if success:
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Google OAuth2!")
        print("\nüîó –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Google OAuth2:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Cloud Console: https://console.cloud.google.com/")
        print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π")
        print("3. –í–∫–ª—é—á–∏—Ç–µ Google+ API")
        print("4. –°–æ–∑–¥–∞–π—Ç–µ OAuth2 Client ID")
        print("5. –î–æ–±–∞–≤—å—Ç–µ Authorized redirect URI: http://localhost:8001/api/auth/google/callback")
        print("6. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Client ID –∏ Client Secret –≤ backend/.env")
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")