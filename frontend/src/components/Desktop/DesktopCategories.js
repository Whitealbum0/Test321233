import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useCategories, useProducts, useCategoryStats } from '../../hooks/useProducts';
import LoadingSpinner from '../Common/LoadingSpinner';

const DesktopCategories = () => {
  const navigate = useNavigate();
  const { categories, loading: categoriesLoading } = useCategories();
  const { products } = useProducts();
  const { categoryStats, loading: statsLoading } = useCategoryStats();

  const handleCategoryClick = (category) => {
    navigate(`/products?category=${encodeURIComponent(category)}`);
  };

  const getCategoryIcon = (category) => {
    const icons = {
      '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞': 'üíª',
      '–ú–æ–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã': 'üëó',
      '–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ': 'üíÑ',
      '–î–æ–º –∏ –±—ã—Ç': 'üè†',
      '–°–ø–æ—Ä—Ç –∏ —Ñ–∏—Ç–Ω–µ—Å': '‚öΩ'
    };
    return icons[category] || 'üì¶';
  };

  const getCategoryColor = (category) => {
    const colors = {
      '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞': 'bg-blue-500',
      '–ú–æ–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã': 'bg-purple-500',
      '–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ': 'bg-pink-500',
      '–î–æ–º –∏ –±—ã—Ç': 'bg-green-500',
      '–°–ø–æ—Ä—Ç –∏ —Ñ–∏—Ç–Ω–µ—Å': 'bg-orange-500'
    };
    return colors[category] || 'bg-gray-500';
  };

  if (categoriesLoading || statsLoading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <LoadingSpinner size="large" text="–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏..." />
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
          <div className="text-center">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
            </h1>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ
            </p>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
          <div className="bg-white rounded-xl shadow-sm p-6 text-center">
            <div className="text-3xl font-bold text-blue-600 mb-2">
              {categories.length}
            </div>
            <div className="text-gray-600">–ö–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤</div>
          </div>
          <div className="bg-white rounded-xl shadow-sm p-6 text-center">
            <div className="text-3xl font-bold text-green-600 mb-2">
              {products.length}
            </div>
            <div className="text-gray-600">–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</div>
          </div>
          <div className="bg-white rounded-xl shadow-sm p-6 text-center">
            <div className="text-3xl font-bold text-purple-600 mb-2">
              {products.length > 0 ? Math.round(products.reduce((sum, p) => sum + p.price, 0) / products.length) : 0} ‚ÇΩ
            </div>
            <div className="text-gray-600">–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</div>
          </div>
        </div>

        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {categories.map((category) => {
            const stats = categoryStats[category] || {};
            return (
              <div
                key={category}
                onClick={() => handleCategoryClick(category)}
                className="bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer group"
              >
                <div className="p-6">
                  <div className="flex items-center mb-4">
                    <div className={`w-12 h-12 rounded-lg ${getCategoryColor(category)} flex items-center justify-center text-white text-2xl mr-4`}>
                      {getCategoryIcon(category)}
                    </div>
                    <div>
                      <h3 className="text-xl font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                        {category}
                      </h3>
                      <p className="text-gray-600 text-sm">
                        {stats.count || 0} —Ç–æ–≤–∞—Ä–æ–≤
                      </p>
                    </div>
                  </div>

                  {stats.count > 0 && (
                    <div className="space-y-2 mb-4">
                      <div className="flex justify-between text-sm">
                        <span className="text-gray-500">–¶–µ–Ω–∞ –æ—Ç:</span>
                        <span className="font-medium">{Math.round(stats.min_price)} ‚ÇΩ</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-gray-500">–¶–µ–Ω–∞ –¥–æ:</span>
                        <span className="font-medium">{Math.round(stats.max_price)} ‚ÇΩ</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-gray-500">–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞:</span>
                        <span className="font-medium">{Math.round(stats.avg_price)} ‚ÇΩ</span>
                      </div>
                    </div>
                  )}

                  <div className="flex items-center justify-between">
                    <button className="text-blue-600 hover:text-blue-700 font-medium text-sm group-hover:underline">
                      –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã
                    </button>
                    <svg className="w-5 h-5 text-gray-400 group-hover:text-blue-600 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                    </svg>
                  </div>
                </div>
              </div>
            );
          })}
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
        <div className="mt-16">
          <h2 className="text-2xl font-bold text-gray-900 mb-8 text-center">
            –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <div
              onClick={() => navigate('/products?priceRange=under_1000')}
              className="bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer p-6 text-center group"
            >
              <div className="text-3xl mb-3">üí∞</div>
              <h3 className="font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                –î–æ 1 000 ‚ÇΩ
              </h3>
              <p className="text-sm text-gray-600 mt-2">
                –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
              </p>
            </div>

            <div
              onClick={() => navigate('/products?priceRange=1000_5000')}
              className="bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer p-6 text-center group"
            >
              <div className="text-3xl mb-3">üíé</div>
              <h3 className="font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                1 000 - 5 000 ‚ÇΩ
              </h3>
              <p className="text-sm text-gray-600 mt-2">
                –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
              </p>
            </div>

            <div
              onClick={() => navigate('/products?priceRange=5000_20000')}
              className="bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer p-6 text-center group"
            >
              <div className="text-3xl mb-3">‚≠ê</div>
              <h3 className="font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                5 000 - 20 000 ‚ÇΩ
              </h3>
              <p className="text-sm text-gray-600 mt-2">
                –ü—Ä–µ–º–∏—É–º —Ç–æ–≤–∞—Ä—ã
              </p>
            </div>

            <div
              onClick={() => navigate('/products?priceRange=over_20000')}
              className="bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer p-6 text-center group"
            >
              <div className="text-3xl mb-3">üëë</div>
              <h3 className="font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                –°–≤—ã—à–µ 20 000 ‚ÇΩ
              </h3>
              <p className="text-sm text-gray-600 mt-2">
                –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DesktopCategories;